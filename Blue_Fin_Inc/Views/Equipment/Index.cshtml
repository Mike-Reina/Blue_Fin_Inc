@model IEnumerable<Blue_Fin_Inc.Models.Equipment>

@{
    ViewData["Title"] = "Index";
}

<h2>Equipment</h2>

<form method="get" asp-action="Index">
    <p>
        <input type="search" placeholder="Enter Equipment Search Term... " value="@ViewData["GetEquipmentDetails"]" name="EquSearch" style="width:500px"/>
        <input type="submit" value="Search" class="btn btn-primary"/>
        <a asp-action="Index">Back to All Equipment</a>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Manufacturer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Colour)
            </th>
            <th style="width:100px">
                L x W x H
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a href="@("http://localhost:32679/Equipment/Details/" + item.ProductCode)">
                    <img src="@("~/images/" + item.ImageName)" asp-append-version="true" width="150px" height="150px" />
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Manufacturer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @{
                    var temp = (Math.Truncate(item.Price * 100) / 100).ToString("n2");
                    @Html.DisplayFor(model => temp)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Colour)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lenght) x @Html.DisplayFor(modelItem => item.Width) x @Html.DisplayFor(modelItem => item.Height)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @if (item.Stock > 0)
                {
                    @Html.ActionLink("Add to Order", "Check", "Order", new { id = item.ProductCode, productType = "Equipment" }, new { @class= "addToOrderLink" })
                }
                @if (item.Stock == 0)
                {
                    @Html.ActionLink("Zero Stock Available", "Index")
                }
            </td>
        </tr>
}
    </tbody>
</table>
